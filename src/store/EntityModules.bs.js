// Generated by BUCKLESCRIPT VERSION 5.0.2, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function decode(json) {
  return /* record */Block.record([
            "id",
            "pi_id",
            "primary_irb_id"
          ], [
            Json_decode.field("id", Json_decode.$$int, json),
            Json_decode.field("pi_id", Json_decode.$$int, json),
            Json_decode.optional((function (param) {
                    return Json_decode.field("primary_irb_id", Json_decode.$$int, param);
                  }), json)
          ]);
}

var Project = /* module */Block.localModule(["decode"], [decode]);

function decode$1(json) {
  return /* record */Block.record([
            "id",
            "project_id",
            "number"
          ], [
            Json_decode.field("id", Json_decode.$$int, json),
            Json_decode.field("project_id", Json_decode.$$int, json),
            Json_decode.field("number", Json_decode.$$int, json)
          ]);
}

function filterExperiments(projectId, entities) {
  return Belt_Option.map(entities, (function (exps) {
                return Belt_Array.keep(exps, (function (exp) {
                              var expEntity = decode$1(exp);
                              return projectId === expEntity[/* project_id */1];
                            }));
              }));
}

var Experiment = /* module */Block.localModule([
    "decode",
    "filterExperiments"
  ], [
    decode$1,
    filterExperiments
  ]);

function Make_EntityData(D) {
  return /* module */Block.localModule(["decode"], [D[0]]);
}

function decode$2(json) {
  return /* record */Block.record([
            "id",
            "project_id",
            "number"
          ], [
            Json_decode.field("id", Json_decode.$$int, json),
            Json_decode.field("project_id", Json_decode.$$int, json),
            Json_decode.field("number", Json_decode.$$int, json)
          ]);
}

var E2 = /* module */Block.localModule(["decode"], [decode$2]);

exports.Project = Project;
exports.Experiment = Experiment;
exports.Make_EntityData = Make_EntityData;
exports.E2 = E2;
/* No side effect */
